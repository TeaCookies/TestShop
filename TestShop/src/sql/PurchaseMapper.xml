<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	
 	 <resultMap id="purchaseSelectMap" type="purchase">
	
		<result property="tranNo" 			column="tran_no" 			jdbcType="INTEGER" />
		<result property="purchaseProd.prodNo" 		column="prod_no" 		jdbcType="INTEGER" />
		<result property="purchaseProd.prodName" 	column="prod_name" 		jdbcType="VARCHAR" />
		<result property="buyer.userId" 	column="buyer_id" 			jdbcType="VARCHAR"/>
		<result property="paymentOption" 	column="payment_option" 	jdbcType="VARCHAR" />
		<result property="receiverName" 	column="receiver_name" 		jdbcType="VARCHAR" />
		<result property="receiverPhone" 	column="receiver_phone" 	jdbcType="VARCHAR" />
		<result property="divyAddr"			column="demailaddr" 		jdbcType="VARCHAR" />
		<result property="divyRequest" 		column="dlvy_request" 		jdbcType="VARCHAR" />
		<result property="tranCode" 		column="tran_status_code" 	jdbcType="VARCHAR" />
		<result property="orderDate" 		column="order_data" 		jdbcType="DATE" />
		<result property="divyDate" 		column="dlvy_date" 			jdbcType="DATE" />
		<result property="tranQuantity" 		column="tranquantity" 			jdbcType="INTEGER" />
		<result property="tranPrice" 		column="tranprice" 			jdbcType="INTEGER" />
		<result property="mileage" 		column="tranmileage" 			jdbcType="INTEGER" />
	 </resultMap>
	
	
	
	
	 <!-- SQL : INSERT -->
	 <insert 	id="addPurchase"		parameterType="purchase" >
	 	INSERT
		INTO transaction ( tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
							demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date, tranquantity, tranprice, tranmileage ) 
		VALUES	 (	seq_transaction_tran_no.nextval, 
					#{purchaseProd.prodNo} , 
					#{buyer.userId} , 
					#{paymentOption} , 
					#{receiverName} , 
					#{receiverPhone} , 
					#{divyAddr:VARCHAR} , 
					#{divyRequest:VARCHAR} , 
					#{tranCode} , 
					SYSDATE , 
					#{divyDate:DATE},
					#{tranQuantity}, 
					#{tranPrice}, 
					#{mileage} )
	 </insert>
	 
	 
	 
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getPurchase"	parameterType="int"		resultMap="purchaseSelectMap">
		SELECT
		tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
		demailaddr, dlvy_request, tran_status_code, order_data, dlvy_Date , tranquantity, tranprice, tranmileage
		FROM transaction 
		WHERE tran_no = #{value}
	 </select>
	 
	 
	 <select 	id="getPurchase2"	parameterType="int"		resultMap="purchaseSelectMap">
		SELECT
		tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
		demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date, tranquantity, tranprice, tranmileage
		FROM transaction 
		WHERE prod_no = #{value}
	 </select>
	 
	 
	 
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
			receiver_name		= #{receiverName:VARCHAR},
			receiver_phone 		= #{receiverPhone:VARCHAR},
			demailaddr	 		= #{divyAddr:VARCHAR} ,
			dlvy_request 		= #{divyRequest:VARCHAR},
			dlvy_date			= TO_DATE(#{divyDate:DATE},'YYYY-MM-DD')
	   	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
	 
	 <update	id="updateTranCode"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
			tran_status_code	= #{tranCode}
	   	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
	 
	 
		 
		 
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="map"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
  				FROM ( SELECT tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
  				      		  demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date , tranquantity, tranprice
					   FROM transaction
						<where>
							<if test="buyerId != null">buyer_id = #{buyerId} </if>
						</where>
						ORDER BY tran_no DESC ) inner_table
				WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="map"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, 
						demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date , tranquantity , tranprice
						FROM transaction
						<where>
							<if test="buyerId != null">buyer_id = #{buyerId} </if>
						</where> ) countTable						
	 </select>
	 
	 
	 
	 
</mapper>